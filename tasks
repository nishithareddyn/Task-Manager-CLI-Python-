import json
import argparse

TASKS_FILE = "tasks.json"

def load_tasks():
    try:
        with open(TASKS_FILE, "r") as file:
            return json.load(file)
    except (FileNotFoundError, json.JSONDecodeError):
        return []

def save_tasks(tasks):
    with open(TASKS_FILE, "w") as file:
        json.dump(tasks, file, indent=4)

def add_task(description):
    tasks = load_tasks()
    tasks.append({"task": description, "completed": False})
    save_tasks(tasks)
    print(f"Added task: {description}")

def list_tasks():
    tasks = load_tasks()
    if not tasks:
        print("No tasks found!")
    else:
        for idx, task in enumerate(tasks, 1):
            status = "[âœ“]" if task["completed"] else "[ ]"
            print(f"{idx}. {status} {task['task']}")

def complete_task(task_number):
    tasks = load_tasks()
    if 0 < task_number <= len(tasks):
        tasks[task_number - 1]["completed"] = True
        save_tasks(tasks)
        print(f"Marked task {task_number} as complete!")
    else:
        print("Invalid task number!")

def main():
    parser = argparse.ArgumentParser(description="Task Manager CLI")
    parser.add_argument("command", choices=["add", "list", "complete"], help="Command to execute")
    parser.add_argument("--desc", help="Task description (for 'add' command)")
    parser.add_argument("--num", type=int, help="Task number (for 'complete' command)")

    args = parser.parse_args()

    if args.command == "add" and args.desc:
        add_task(args.desc)
    elif args.command == "list":
        list_tasks()
    elif args.command == "complete" and args.num:
        complete_task(args.num)
    else:
        print("Invalid usage. Try: python task_manager.py list")

if __name__ == "__main__":
    main()
